{
  "_from": "github-api",
  "_id": "github-api@3.0.0",
  "_inBundle": false,
  "_integrity": "sha1-KDL5jQ06g/FIXi2zLJJZ5LnECnU=",
  "_location": "/github-api",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "github-api",
    "fetchSpec": "latest",
    "name": "github-api",
    "raw": "github-api",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/github-api/-/github-api-3.0.0.tgz",
  "_shasum": "2832f98d0d3a83f1485e2db32c9259e4b9c40a75",
  "_spec": "github-api",
  "_where": "/home/bluz/repos/travis-mocha-bot",
  "babel": {
    "env": {
      "development": {
        "sourceMaps": "inline"
      },
      "test": {
        "plugins": [
          "istanbul"
        ]
      }
    },
    "plugins": [
      [
        "add-module-exports",
        "transform-es2015-modules-umd"
      ]
    ],
    "presets": [
      "es2015"
    ]
  },
  "bugs": {
    "url": "https://github.com/github-tools/github/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "email": "aendrew.rininsland@thetimes.co.uk",
      "name": "Ã†ndrew Rininsland",
      "url": "http://www.aendrew.com"
    },
    {
      "email": "a.derosa@audero.it",
      "name": "Aurelio De Rosa",
      "url": "http://www.audero.it/"
    },
    {
      "email": "clayreimann@gmail.com",
      "name": "Clay Reimann",
      "url": "http://clayreimann.me"
    },
    {
      "name": "Michael Aufreiter",
      "url": "http://substance.io"
    },
    {
      "email": "mathieu@dutour.me",
      "name": "Mathieu Dutour",
      "url": "https://github.com/mathieudutour"
    }
  ],
  "dependencies": {
    "axios": "^0.15.2",
    "debug": "^2.2.0",
    "js-base64": "^2.1.9",
    "utf8": "^2.1.1"
  },
  "deprecated": false,
  "description": "A higher-level wrapper around the Github API.",
  "devDependencies": {
    "babel-core": "^6.7.7",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-istanbul": "3.0.0",
    "babel-plugin-transform-es2015-modules-umd": "^6.5.0",
    "babel-preset-es2015": "^6.5.0",
    "babel-register": "^6.7.2",
    "babelify": "^7.3.0",
    "browserify": "^13.0.0",
    "codecov": "^1.0.1",
    "del": "^2.2.0",
    "eslint-config-google": "^0.7.0",
    "eslint-plugin-mocha": "^4.7.0",
    "gulp": "^3.9.0",
    "gulp-babel": "^6.1.2",
    "gulp-eslint": "^3.0.1",
    "gulp-jscs": "^4.0.0",
    "gulp-jscs-stylish": "^1.3.0",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^2.2.0",
    "gulp-uglify": "^2.0.0",
    "jsdoc": "^3.4.0",
    "minami": "^1.1.1",
    "mocha": "^3.1.2",
    "must": "^0.13.1",
    "nock": "^9.0.2",
    "nyc": "9.0.1",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0"
  },
  "files": [
    "dist/*"
  ],
  "homepage": "https://github.com/github-tools/github#readme",
  "keywords": [
    "github",
    "api"
  ],
  "license": "BSD-3-Clause-Clear",
  "main": "dist/components/GitHub.js",
  "name": "github-api",
  "nyc": {
    "instrument": false,
    "sourceMap": false
  },
  "optionalDependencies": {},
  "readme": "# Github.js\n\n[![Downloads per month](https://img.shields.io/npm/dm/github-api.svg?maxAge=2592000)][npm-package]\n[![Latest version](https://img.shields.io/npm/v/github-api.svg?maxAge=3600)][npm-package]\n[![Gitter](https://img.shields.io/gitter/room/github-tools/github.js.svg?maxAge=2592000)][gitter]\n[![Travis](https://img.shields.io/travis/github-tools/github.svg?maxAge=60)][travis-ci]\n[![Codecov](https://img.shields.io/codecov/c/github/github-tools/github.svg?maxAge=2592000)][codecov]\n\nGithub.js provides a minimal higher-level wrapper around Github's API.\n\n## Usage\n\n```javascript\n/*\n   Data can be retrieved from the API either using callbacks (as in versions < 1.0)\n   or using a new promise-based API. The promise-based API returns the raw Axios\n   request promise.\n */\nimport GitHub from 'github-api';\n\n// unauthenticated client\nconst gh = new GitHub();\nlet gist = gh.getGist(); // not a gist yet\ngist.create({\n   public: true,\n   description: 'My first gist',\n   files: {\n      \"file1.txt\": {\n         content: \"Aren't gists great!\"\n      }\n   }\n}).then(function({data}) {\n   // Promises!\n   let createdGist = data;\n   return gist.read();\n}).then(function({data}) {\n   let retrievedGist = data;\n   // do interesting things\n});\n```\n\n```javascript\nvar GitHub = require('github-api');\n\n// basic auth\nvar gh = new GitHub({\n   username: 'FOO',\n   password: 'NotFoo'\n   /* also acceptable:\n      token: 'MY_OAUTH_TOKEN'\n    */\n});\n\nvar me = gh.getUser(); // no user specified defaults to the user for whom credentials were provided\nme.listNotifications(function(err, notifications) {\n   // do some stuff\n});\n\nvar clayreimann = gh.getUser('clayreimann');\nclayreimann.listStarredRepos(function(err, repos) {\n   // look at all the starred repos!\n});\n```\n\n## API Documentation\n\n[API documentation][docs] is hosted on github pages, and is generated from JSDoc; any contributions\nshould include updated JSDoc.\n\n## Installation\nGithub.js is available from `npm` or [unpkg][unpkg].\n\n```shell\nnpm install github-api\n```\n\n```html\n<!-- just github-api source (5.3kb) -->\n<script src=\"https://unpkg.com/github-api/dist/GitHub.min.js\"></script>\n\n<!-- standalone (20.3kb) -->\n<script src=\"https://unpkg.com/github-api/dist/GitHub.bundle.min.js\"></script>\n```\n\n## Compatibility\n`Github.js` is tested on Node.js:\n* 6.x\n\nNote: `Github.js` uses Promise, hence it will not work in Node.js < 4 without polyfill.\n\n[codecov]: https://codecov.io/github/github-tools/github?branch=master\n[docs]: http://github-tools.github.io/github/\n[gitter]: https://gitter.im/github-tools/github\n[npm-package]: https://www.npmjs.com/package/github-api/\n[unpkg]: https://unpkg.com/github-api/\n[travis-ci]: https://travis-ci.org/github-tools/github\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/github-tools/github.git"
  },
  "scripts": {
    "build": "gulp build",
    "clean": "gulp clean",
    "codecov": "nyc report --reporter=text-lcov > coverage.lcov && codecov",
    "lint": "gulp lint",
    "make-docs": "jsdoc -c .jsdoc.json --verbose",
    "release": "./release.sh",
    "test": "mocha --opts ./mocha.opts test/*.spec.js",
    "test-coverage": "NODE_ENV=test nyc mocha --opts ./mocha.opts test/*.spec.js",
    "test-verbose": "DEBUG=github* npm test"
  },
  "version": "3.0.0"
}
